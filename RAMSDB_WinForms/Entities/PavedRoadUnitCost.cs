//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework DbContext template.
// Code is generated on: 3/7/2022 4:13:26 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;

namespace RAMSDBModel
{
    [System.ComponentModel.DataAnnotations.Schema.Table("PavedRoadUnitCost", Schema = "dbo")]
    public partial class PavedRoadUnitCost : INotifyPropertyChanged
    {

        public PavedRoadUnitCost()
        {
            OnCreated();
        }

        #region Properties

        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "int", Order = 0)]
        [System.ComponentModel.DataAnnotations.Schema.DatabaseGenerated(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity)]
        public virtual int PavedRoadUnitCostID
        {
            get
            {
                return _PavedRoadUnitCostID;
            }
            set
            {
                if (_PavedRoadUnitCostID != value)
                {
                    _PavedRoadUnitCostID = value;
                    OnPropertyChanged("PavedRoadUnitCostID");
                }
            }
        }
        private int _PavedRoadUnitCostID;

        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "smallint", Order = 1)]
        public virtual short UnitCostYear
        {
            get
            {
                return _UnitCostYear;
            }
            set
            {
                if (_UnitCostYear != value)
                {
                    _UnitCostYear = value;
                    OnPropertyChanged("UnitCostYear");
                }
            }
        }
        private short _UnitCostYear;

        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "varchar", Order = 2)]
        public virtual string RegionName
        {
            get
            {
                return _RegionName;
            }
            set
            {
                if (_RegionName != value)
                {
                    _RegionName = value;
                    OnPropertyChanged("RegionName");
                }
            }
        }
        private string _RegionName;

        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "int", Order = 3)]
        public virtual int CatWorkID
        {
            get
            {
                return _CatWorkID;
            }
            set
            {
                if (_CatWorkID != value)
                {
                    _CatWorkID = value;
                    OnPropertyChanged("CatWorkID");
                }
            }
        }
        private int _CatWorkID;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "numeric", Order = 4)]
        public virtual decimal? PavedUnitCost
        {
            get
            {
                return _PavedUnitCost;
            }
            set
            {
                if (_PavedUnitCost != value)
                {
                    _PavedUnitCost = value;
                    OnPropertyChanged("PavedUnitCost");
                }
            }
        }
        private decimal? _PavedUnitCost;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "varchar", Order = 5)]
        public virtual string UnitCostUnit
        {
            get
            {
                return _UnitCostUnit;
            }
            set
            {
                if (_UnitCostUnit != value)
                {
                    _UnitCostUnit = value;
                    OnPropertyChanged("UnitCostUnit");
                }
            }
        }
        private string _UnitCostUnit;

        #endregion

        #region Navigation Properties

        [System.ComponentModel.DataAnnotations.Schema.ForeignKey("CatWorkID")]
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("PavedRoadUnitCosts")]
        public virtual PavedCategoryofWork PavedCategoryofWork
        {
            get
            {
                return _PavedCategoryofWork;
            }
            set
            {
                if (_PavedCategoryofWork != value)
                {
                    _PavedCategoryofWork = value;
                    OnPropertyChanged("PavedCategoryofWork");
                }
            }
        }
        private PavedCategoryofWork _PavedCategoryofWork;

        #endregion

        #region Extensibility Method Definitions

        partial void OnCreated();

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        protected void OnPropertyChanged(string propertyName) {

          if (PropertyChanged != null)
            PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        #endregion
    }

}
