//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework DbContext template.
// Code is generated on: 3/7/2022 4:13:26 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;

namespace RAMSDBModel
{
    [System.ComponentModel.DataAnnotations.Schema.Table("PavedCategoryofWork", Schema = "dbo")]
    public partial class PavedCategoryofWork : INotifyPropertyChanged
    {

        public PavedCategoryofWork()
        {
            this.PavedRoadUnitCosts = new ObservableListSource<PavedRoadUnitCost>();
            this.PavedTentativeRoadMaintenancePlans = new ObservableListSource<PavedTentativeRoadMaintenancePlan>();
            OnCreated();
        }

        #region Properties

        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "int", Order = 0)]
        [System.ComponentModel.DataAnnotations.Schema.DatabaseGenerated(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity)]
        public virtual int CatWorkID
        {
            get
            {
                return _CatWorkID;
            }
            set
            {
                if (_CatWorkID != value)
                {
                    _CatWorkID = value;
                    OnPropertyChanged("CatWorkID");
                }
            }
        }
        private int _CatWorkID;

        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "varchar(max)", Order = 1)]
        public virtual string WorkDescription
        {
            get
            {
                return _WorkDescription;
            }
            set
            {
                if (_WorkDescription != value)
                {
                    _WorkDescription = value;
                    OnPropertyChanged("WorkDescription");
                }
            }
        }
        private string _WorkDescription;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "varchar", Order = 2)]
        public virtual string Intervention
        {
            get
            {
                return _Intervention;
            }
            set
            {
                if (_Intervention != value)
                {
                    _Intervention = value;
                    OnPropertyChanged("Intervention");
                }
            }
        }
        private string _Intervention;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "varchar", Order = 3)]
        public virtual string Scope
        {
            get
            {
                return _Scope;
            }
            set
            {
                if (_Scope != value)
                {
                    _Scope = value;
                    OnPropertyChanged("Scope");
                }
            }
        }
        private string _Scope;

        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "varchar", Order = 4)]
        public virtual string ActivityCode
        {
            get
            {
                return _ActivityCode;
            }
            set
            {
                if (_ActivityCode != value)
                {
                    _ActivityCode = value;
                    OnPropertyChanged("ActivityCode");
                }
            }
        }
        private string _ActivityCode;

        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "varchar", Order = 5)]
        public virtual string ActivityName
        {
            get
            {
                return _ActivityName;
            }
            set
            {
                if (_ActivityName != value)
                {
                    _ActivityName = value;
                    OnPropertyChanged("ActivityName");
                }
            }
        }
        private string _ActivityName;

        #endregion

        #region Navigation Properties

        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("PavedCategoryofWork")]
        public virtual ObservableListSource<PavedRoadUnitCost> PavedRoadUnitCosts { get; set; }
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("PavedCategoryofWork")]
        public virtual ObservableListSource<PavedTentativeRoadMaintenancePlan> PavedTentativeRoadMaintenancePlans { get; set; }

        #endregion

        #region Extensibility Method Definitions

        partial void OnCreated();

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        protected void OnPropertyChanged(string propertyName) {

          if (PropertyChanged != null)
            PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        #endregion
    }

}
