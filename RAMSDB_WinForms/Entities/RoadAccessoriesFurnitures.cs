//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework DbContext template.
// Code is generated on: 3/9/2022 2:28:37 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;

namespace RAMSDBModel
{
    [System.ComponentModel.DataAnnotations.Schema.Table("RoadAccessoriesFurnitures", Schema = "dbo")]
    public partial class RoadAccessoriesFurnitures : INotifyPropertyChanged
    {

        public RoadAccessoriesFurnitures()
        {
            OnCreated();
        }

        #region Properties

        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "int", Order = 0)]
        [System.ComponentModel.DataAnnotations.Schema.DatabaseGenerated(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity)]
        public virtual int ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    _ID = value;
                    OnPropertyChanged("ID");
                }
            }
        }
        private int _ID;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "decimal", Order = 1)]
        public virtual decimal? XCoordinate
        {
            get
            {
                return _XCoordinate;
            }
            set
            {
                if (_XCoordinate != value)
                {
                    _XCoordinate = value;
                    OnPropertyChanged("XCoordinate");
                }
            }
        }
        private decimal? _XCoordinate;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "decimal", Order = 2)]
        public virtual decimal? YCoordinate
        {
            get
            {
                return _YCoordinate;
            }
            set
            {
                if (_YCoordinate != value)
                {
                    _YCoordinate = value;
                    OnPropertyChanged("YCoordinate");
                }
            }
        }
        private decimal? _YCoordinate;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "varchar", Order = 3)]
        public virtual string ItemType
        {
            get
            {
                return _ItemType;
            }
            set
            {
                if (_ItemType != value)
                {
                    _ItemType = value;
                    OnPropertyChanged("ItemType");
                }
            }
        }
        private string _ItemType;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "varchar", Order = 4)]
        public virtual string ConstructionMaterial
        {
            get
            {
                return _ConstructionMaterial;
            }
            set
            {
                if (_ConstructionMaterial != value)
                {
                    _ConstructionMaterial = value;
                    OnPropertyChanged("ConstructionMaterial");
                }
            }
        }
        private string _ConstructionMaterial;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "smallint", Order = 5)]
        public virtual short? ConstructionYear
        {
            get
            {
                return _ConstructionYear;
            }
            set
            {
                if (_ConstructionYear != value)
                {
                    _ConstructionYear = value;
                    OnPropertyChanged("ConstructionYear");
                }
            }
        }
        private short? _ConstructionYear;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "varchar", Order = 6)]
        public virtual string RemarkComments
        {
            get
            {
                return _RemarkComments;
            }
            set
            {
                if (_RemarkComments != value)
                {
                    _RemarkComments = value;
                    OnPropertyChanged("RemarkComments");
                }
            }
        }
        private string _RemarkComments;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "varchar", Order = 7)]
        public virtual string Condition
        {
            get
            {
                return _Condition;
            }
            set
            {
                if (_Condition != value)
                {
                    _Condition = value;
                    OnPropertyChanged("Condition");
                }
            }
        }
        private string _Condition;

        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "uniqueidentifier", Order = 8)]
        public virtual global::System.Guid RoadID
        {
            get
            {
                return _RoadID;
            }
            set
            {
                if (_RoadID != value)
                {
                    _RoadID = value;
                    OnPropertyChanged("RoadID");
                }
            }
        }
        private global::System.Guid _RoadID;

        #endregion

        #region Navigation Properties

        [System.ComponentModel.DataAnnotations.Schema.ForeignKey("RoadID")]
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("RoadAccessoriesFurnitures")]
        public virtual RoadsGISData RoadsGISData
        {
            get
            {
                return _RoadsGISData;
            }
            set
            {
                if (_RoadsGISData != value)
                {
                    _RoadsGISData = value;
                    OnPropertyChanged("RoadsGISData");
                }
            }
        }
        private RoadsGISData _RoadsGISData;

        #endregion

        #region Extensibility Method Definitions

        partial void OnCreated();

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        protected void OnPropertyChanged(string propertyName) {

          if (PropertyChanged != null)
            PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        #endregion
    }

}
