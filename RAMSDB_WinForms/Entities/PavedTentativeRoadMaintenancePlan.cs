//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework DbContext template.
// Code is generated on: 3/9/2022 2:28:37 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;

namespace RAMSDBModel
{
    [System.ComponentModel.DataAnnotations.Schema.Table("PavedTentativeRoadMaintenancePlan", Schema = "dbo")]
    public partial class PavedTentativeRoadMaintenancePlan : INotifyPropertyChanged
    {

        public PavedTentativeRoadMaintenancePlan()
        {
            OnCreated();
        }

        #region Properties

        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "int", Order = 0)]
        [System.ComponentModel.DataAnnotations.Schema.DatabaseGenerated(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity)]
        public virtual int PavedTentRMaintPlan
        {
            get
            {
                return _PavedTentRMaintPlan;
            }
            set
            {
                if (_PavedTentRMaintPlan != value)
                {
                    _PavedTentRMaintPlan = value;
                    OnPropertyChanged("PavedTentRMaintPlan");
                }
            }
        }
        private int _PavedTentRMaintPlan;

        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "int", Order = 1)]
        public virtual int PRCSID
        {
            get
            {
                return _PRCSID;
            }
            set
            {
                if (_PRCSID != value)
                {
                    _PRCSID = value;
                    OnPropertyChanged("PRCSID");
                }
            }
        }
        private int _PRCSID;

        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "uniqueidentifier", Order = 2)]
        public virtual global::System.Guid RoadID
        {
            get
            {
                return _RoadID;
            }
            set
            {
                if (_RoadID != value)
                {
                    _RoadID = value;
                    OnPropertyChanged("RoadID");
                }
            }
        }
        private global::System.Guid _RoadID;

        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "smallint", Order = 3)]
        public virtual short Year
        {
            get
            {
                return _Year;
            }
            set
            {
                if (_Year != value)
                {
                    _Year = value;
                    OnPropertyChanged("Year");
                }
            }
        }
        private short _Year;

        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "int", Order = 4)]
        public virtual int CatWorkID
        {
            get
            {
                return _CatWorkID;
            }
            set
            {
                if (_CatWorkID != value)
                {
                    _CatWorkID = value;
                    OnPropertyChanged("CatWorkID");
                }
            }
        }
        private int _CatWorkID;

        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "numeric", Order = 5)]
        public virtual decimal Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                if (_Quantity != value)
                {
                    _Quantity = value;
                    OnPropertyChanged("Quantity");
                }
            }
        }
        private decimal _Quantity;

        #endregion

        #region Navigation Properties

        [System.ComponentModel.DataAnnotations.Schema.ForeignKey("RoadID")]
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("PavedTentativeRoadMaintenancePlans")]
        public virtual RoadsGISData RoadsGISData
        {
            get
            {
                return _RoadsGISData;
            }
            set
            {
                if (_RoadsGISData != value)
                {
                    _RoadsGISData = value;
                    OnPropertyChanged("RoadsGISData");
                }
            }
        }
        private RoadsGISData _RoadsGISData;
        [System.ComponentModel.DataAnnotations.Schema.ForeignKey("CatWorkID")]
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("PavedTentativeRoadMaintenancePlans")]
        public virtual PavedCategoryofWork PavedCategoryofWork
        {
            get
            {
                return _PavedCategoryofWork;
            }
            set
            {
                if (_PavedCategoryofWork != value)
                {
                    _PavedCategoryofWork = value;
                    OnPropertyChanged("PavedCategoryofWork");
                }
            }
        }
        private PavedCategoryofWork _PavedCategoryofWork;
        [System.ComponentModel.DataAnnotations.Schema.ForeignKey("PRCSID")]
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("PavedTentativeRoadMaintenancePlans")]
        public virtual PavedRoadConditionSurvey PavedRoadConditionSurvey
        {
            get
            {
                return _PavedRoadConditionSurvey;
            }
            set
            {
                if (_PavedRoadConditionSurvey != value)
                {
                    _PavedRoadConditionSurvey = value;
                    OnPropertyChanged("PavedRoadConditionSurvey");
                }
            }
        }
        private PavedRoadConditionSurvey _PavedRoadConditionSurvey;

        #endregion

        #region Extensibility Method Definitions

        partial void OnCreated();

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        protected void OnPropertyChanged(string propertyName) {

          if (PropertyChanged != null)
            PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        #endregion
    }

}
