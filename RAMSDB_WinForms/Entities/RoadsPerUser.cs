//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework DbContext template.
// Code is generated on: 3/9/2022 2:28:37 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;

namespace RAMSDBModel
{
    [System.ComponentModel.DataAnnotations.Schema.Table("RoadsPerUser", Schema = "dbo")]
    public partial class RoadsPerUser : INotifyPropertyChanged
    {

        public RoadsPerUser()
        {
            this.PavedRoadConditionSurveys = new ObservableListSource<PavedRoadConditionSurvey>();
            this.UnpavedRoadConditionSurveys = new ObservableListSource<UnpavedRoadConditionSurvey>();
            OnCreated();
        }

        #region Properties

        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "uniqueidentifier", Order = 0)]
        [System.ComponentModel.DataAnnotations.Schema.DatabaseGenerated(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None)]
        public virtual global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    _UserID = value;
                    OnPropertyChanged("UserID");
                }
            }
        }
        private global::System.Guid _UserID;

        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "uniqueidentifier", Order = 1)]
        [System.ComponentModel.DataAnnotations.Schema.DatabaseGenerated(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None)]
        public virtual global::System.Guid RoadID
        {
            get
            {
                return _RoadID;
            }
            set
            {
                if (_RoadID != value)
                {
                    _RoadID = value;
                    OnPropertyChanged("RoadID");
                }
            }
        }
        private global::System.Guid _RoadID;

        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "int", Order = 2)]
        public virtual int AdminID
        {
            get
            {
                return _AdminID;
            }
            set
            {
                if (_AdminID != value)
                {
                    _AdminID = value;
                    OnPropertyChanged("AdminID");
                }
            }
        }
        private int _AdminID;

        #endregion

        #region Navigation Properties

        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("RoadsPerUser")]
        public virtual ObservableListSource<PavedRoadConditionSurvey> PavedRoadConditionSurveys { get; set; }
        [System.ComponentModel.DataAnnotations.Schema.ForeignKey("AdminID")]
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("RoadsPerUsers")]
        public virtual AdminBoundary AdminBoundary
        {
            get
            {
                return _AdminBoundary;
            }
            set
            {
                if (_AdminBoundary != value)
                {
                    _AdminBoundary = value;
                    OnPropertyChanged("AdminBoundary");
                }
            }
        }
        private AdminBoundary _AdminBoundary;
        [System.ComponentModel.DataAnnotations.Schema.ForeignKey("UserID")]
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("RoadsPerUsers")]
        public virtual User User
        {
            get
            {
                return _User;
            }
            set
            {
                if (_User != value)
                {
                    _User = value;
                    OnPropertyChanged("User");
                }
            }
        }
        private User _User;
        [System.ComponentModel.DataAnnotations.Schema.ForeignKey("RoadID")]
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("RoadsPerUsers")]
        public virtual RoadsGISData RoadsGISData
        {
            get
            {
                return _RoadsGISData;
            }
            set
            {
                if (_RoadsGISData != value)
                {
                    _RoadsGISData = value;
                    OnPropertyChanged("RoadsGISData");
                }
            }
        }
        private RoadsGISData _RoadsGISData;
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("RoadsPerUser")]
        public virtual ObservableListSource<UnpavedRoadConditionSurvey> UnpavedRoadConditionSurveys { get; set; }

        #endregion

        #region Extensibility Method Definitions

        partial void OnCreated();

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        protected void OnPropertyChanged(string propertyName) {

          if (PropertyChanged != null)
            PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        #endregion
    }

}
